<!-- Launch the plexil_node and terminal selection node. -->

<launch>
  <arg name="plan" default="None"/>
  <arg name="mission_spec_fp" default="None"/>
  <!--
  Environment Variables
  1 EVALUATION_ROOT_DIR
	assists loading run-time info file and dumping synthesized PLEXIL plan to a file
  2 OW_PLEXIL_LIB_SOURCE_DIR
	assists compiling C++-like '#include' headers in synthesized PLEXIL plan (*.plp)
	ow_simulator : '#include "plan-interface.h"'
	owlat        : '#include "owlat-interface.h"'
  3 PLEXIL_LIB_COMPILED_PLAN_DIR
	assists moving the compiled PLEXIL plan (*.plx) to the destination
  -->
  <env name="EVALUATION_ROOT_DIR" default="None"/>
  <env name="OW_PLEXIL_LIB_SOURCE_DIR" default="None"/>
  <env name="PLEXIL_LIB_COMPILED_PLAN_DIR" default="None"/>


  <node pkg="rs_autonomy"
        name="monitor_node"
        type="monitor_node"
        args="$(arg plan)"
        output="screen">
  </node>
  <node pkg="rs_autonomy"
        name="analysis_node"
        type="analysis_node"
        args="$(arg plan)"
        output="screen">
  </node>

  <node pkg="rs_autonomy"
        name="planner_node"
        type="planner_node"
        output="screen">
  </node>

  <node pkg="rs_autonomy"
        name="execute_node"
        type="execute_node"
        output="screen">
  </node>

  <node pkg="rs_autonomy"
        name="knowledge_node"
        type="knowledge_maintenance.py"
        output="screen">
  </node>

  <node pkg="rs_autonomy"
        name="fault_management_node"
        type="fault_management.py"
        output="screen">
  </node>

  <node pkg="rs_autonomy"
        name="task_planning_node"
        type="task_planning.py"
        output="screen">
  </node>

  <node pkg="rs_autonomy"
        name="plan_translation_node"
        type="plexil_plan_translator.py"
        output="screen">
  </node>

  <node pkg="rs_autonomy"
        name="mission_control_node"
        type="mission_control_node"
        args"$(arg mission_spec_fp)"
        output="screen">
  </node>


</launch>
